Задача на if­else
Даны три числа. Найти сумму двух наибольших из них. Результат вывести на консоль
функцией print.

Задача на цикл for
Дано вещественное число — цена 1 кг конфет. Вывести на консоль стоимость 1, 2, . . . , 10
кг конфет.

Задача на цикл while
Дано вещественное число — цена 1 кг конфет. Вывести на консоль стоимость 1.2, 1.4, . . .
, 2 кг конфет.

Задача на break
Дан список целых чисел. Вывести на консоль числа, количество цифр в которых меньше
3. Если в списке встретится число 42, прервать работу программы и вывести на консоль
строку “The Answer to the Ultimate Question of Life, the Universe, and Everything".

Задача на continue
Дан список целых чисел. Вывести на консоль числа, которые делятся нацело на 13.

Задача на ввод данных
Написать программу, которая принимает список целых чисел из параметров командной
строки(sys.argv). После получения списка нужно найти сумму этих числе и вывести её на
консоль.

Задача на простую функцию
Написать функцию, которая принимает 2 параметра: вес конфет в кг(вещественное
число) и стоимость 1 кг конфет в BYR(целое число).  Функция должна возвращать
суммарную стоимость конфет, округленную до целого числа. Для округления использем
функцию round.

Задача на функцию с переменным числом аргументов
Написать функцию, которая принимает на вход произвольное количество целых
чисел(используем *args).  Функция должна считать сумму цифр переданных чисел и
возвращать в качестве результата эту сумму.

Задача на форматирование строки
Дан список целых чисел. Вывести на консоль строки вида “An even number: 2” для четных
числе, и “An odd number: 3” для нечетных чисел. Код оформить в виде функции,
принимающей один аргумент(список) и ничего не возвращающей.

Задача на разбор строки
Написать функцию, принимающей строку со словами, разделенными пробелами и
возвращающей список из строк, в каждой строке должно быть одно слово.

Задача на datetime(*)
Написать скрипт, который принимает 2 аргумента командной строки: даты в формате
YYYY­mm­dd(год­месяц­дата, пример 2015­12­13). Скрипт должен преобразовывать
строки в тип datetime.date и печатать на консоль, сколько полных дней, часов, минут и
секунд укладывается в заданный этими датами временной интервал.

Задача про dict
Дан словарь с текстовым представлением цифр вида {1: “one”, 2: “two”, ..., 9: “nine”, 0:
“zero”}. Написать функцию, которая принимает целое число и возвращает названия цифр
числа в виде строки.
Вход:
59
Выход:
“five nine”

Задача про tuple
Дан кортеж(tuple) с целыми числами. Написать функцию, которая удаляет из кортежа все
нечетные числа и возвращает результат в виде кортежа.
Задача на чтение текстового файла
Программа получает на вход 2 параметра командной строки: путь к текстовому файлу в
виде строки(filepath) и строку(pattern). Требуется прочитать файл построчно и напечатать
только те строки, в которых заданная pattern­строка является подстрокой.

Задача на запись текстового файла
Программа получает на вход 2 параметр командной строки: путь к входному
файлу(input_file) и путь к выходному файлу(output_file). Требуется скопировать все
данных входного файла в выходной файл. Файл следует читать поблочно, размер блока
принять 1024 байта.

Задача про set
Дано 2 списка целых чисел в файле. Написать скрипт, которые выводит на консоль
пересечение, объединение и разницу двух множеств целых чисел из заданных файлов.
Режим работы скрипта задавать через опцию командной строки ­­set­mode. Таким
образом скрипт должен поддерживать как минимум 3 режима работы: intersection, union и
substraction.

Задача на except
Написать программу, которая получает число в качесве аргумента командной строки и
конвертирует его в двоичую, восьмеричную и шестнадцатеричную системы исчисления.
Результат следует вывести на консоль. Программа должна обрабатывать неправильный
ввод числа(например, ввод строки вместо числа), используя блок try ... except и выводить
сообщение пользователю вида “error: invalid number ‘abc’”.

Задача на raise
Написать функцию, которая проверяет, является ли переданные ей аргумент целым
положительным числом. Если переданный аргумент не целый или не положительный,
следует генерировать исключение типа ValueError с понятной текстовой строкой на
английском языке.

Задача на finally
Написать функцию, которая генерирует 3 разных вида исключений в зависимости от
переданных параметров(например: ValueError, TypeError, ZeroDivisionError). Обернуть
вызов функции в блок try .. finally. Проверить, что программа входит в блок finally с
помощью отладочного print.
Запустить программу несколько раз, проверить, что генерируются разные виды
исключений и что всегда срабатывает код в блоке finally.